
Some Technical Details


Files created:

   server:

      student answer files

   client:

       ExamQuestions.txt:  downloaded questions from server

       omsi_answer*:  the student's answers

server operation:

   OmsiServer.py:

      main loop:  repeatedly call awaitConnections()

      OmsiServer.awaitConnections(): 
      
         runs a listening socket, creates a new thread when a call
         finally comes in; creates socket to pair with client;
         launches a thread that runs requestHandler()

      OmsiServer.requestHandler(): 

          loop, waiting for requests from clients

client operation:

   OmsiGui.py:

      OmsiGui.getConnect():

          triggered by user clicking Connect; connect to server;
          getQuestionsFromServer()

      OmsiGui.updateQuestionBox():

         when user clicks on Question n, the text for Question n is then
         written to the question box; done by OmsiGui.listboxSelected()

      OmsiGui.updateAnswerBox():

         when user clicks on Question n, the current answer for Question
         n is then written to the answer box

      OmsiGui.listboxSelected():

         inserts into the question and answer boxes when user clicks on
         a question; insert() here is a method in the Tkinter.Text class

      uses Tk, so main() sets up a Tk instance top(), then does

         app = OmsiGui(top)
         top.mainloop()

      to set up an OmsiGui class instance and get things going

      widgets were set up in widgets() within that class; clicking one
      triggers a method within that class, e.g. saveAnswer()

      example of interest:  initial connection to server

         user clicks Connect, triggers getConnectionInfo()

         the latter sets up a dialog box (a dBox), and if successful
         connect, then prints out version number, calls
         getQuestionsFromServer() to get the file ExamQuestions (but
         doesn't parse them)

major classes:

   OmsiQuestion, in OmsiQuestion.py:

      one instance for each question

      stores the question and answer, in fields of those same names, in
      plain ASCII 
      
      however, note that the question and answer boxes store text in
      type Tkinter.Text; self.txt() converts the latter to plain ASCII,
      while self.txt.insert() inserts ASCII into a box


